/*/
/*/
/*/
/*------------------------------------*\
 *---- ABSTRACT ELEMENTS: OBJECTS ----*
 *---------- reusable rules ----------*
\*------------------------------------*/
/*/



/* --------------------------------
Headings
-------------------------------- */
.o-heading1 {
  margin: 0;
  text-transform: uppercase;
}

.o-heading2 {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;

  &-gradient {
    display: inline-block;
    background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
    -webkit-background-clip: text;
    /*The webkit-background-clip clips the bachground around the text*/
    color: transparent;
    /*By aking the text transparent the cliped background will be visible
    resulting in a gradient text*/
    letter-spacing: 0.2rem;
    transition: all 0.2s;

    &:hover {
      transform: skewY(2deg) skewX(15deg) scale(1.1);
      text-shadow: 0.5rem 1rem 2rem rgba($color-black-almost, .2);
    }
  }
}

.o-heading3 {
  font-size: $default-font-size;
  font-weight: 700;
  text-transform: uppercase;
}

.o-para1 {
  font-size: $default-font-size;

  &:not(:last-child) {
    margin-bottom: 3rem;
  }
}

.o-btn_round {
  &,
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: $default-font-size 3.6rem;
    display: inline-block;
    border-radius: 20rem;
    transition: all 0.2s;
    position: relative;
  }

  &::after {
    content: "";
    /*a content is mandatory even if an empty string, otherwise 
      the ::after element will not be created*/
    display: inline-block;
    height: 100%;
    width: 100%;
    /*as dimentions of the ::after element it's possible to use
      the relative % units since css will consider the ::after element as a child
      element. It's similar to js expression width = this.width */
    border-radius: 20rem;
    position: absolute;
    /*The absolute positioning allows to place the ::after element relative to 
      the pseudo parent element*/
    top: 0;
    left: 0;
    z-index: -1;
    /*the z-index defines the position in the z-axis. -1 positions the pseudo
      child element behind the pseudo parent element*/
    transition: all 0.4s;
  }


  &:hover::after {
    transform: scaleX(1.5) scaleY(1.6);
    opacity: 0;
  }

  &:hover {
    transform: translateY(-.4rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  }

  &:active {
    transform: translateY(-.2rem);
    box-shadow: 0 0.6rem 1rem rgba(0, 0, 0, 0.2);
  }

  &-white {
    background-color: $color-white;
    color: #777;
    &::after {
      background-color: $color-white;
    }
  }
  
  &-green {
    background-color: $color-primary;
    color: $color-white;
    &::after {
      background-color: $color-primary;
    }
  }
}

.o-btn_text {
  &,
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 0.3rem;
    transition: all 0.2s;
  }

  &:hover {
    border: none;
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem $color-shadow-primary;
    transform: translateY(-0.2rem);
  }

  &:active {}
}

.o-compositionPhoto {
  &:hover &_img:not(:hover) {
    transform: scale(0.95);
    transition: all 0.2s;
    /*!!!!To select the images that are not hover!!!!!*/
  }

  &_img {
    position: absolute;
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba($color-black-almost, .4);

    &:hover {
      outline: 1.5rem solid $color-primary;
      outline-offset: 1.5rem;
      transform: scale(1.05);
      box-shadow: 0 2.5rem 4rem rgba($color-black-almost, .5);
      z-index: 10;
      transition: all 0.2s;
    }
  }
}

.o-featuresCard {
  &_box {
    background-color: rgba($color-white, .7);
    padding: 2.5rem;
    text-align: center;
    border-radius: $borderRadius-px-default;
    box-shadow: 0 1.5rem 4rem $color-shadow-primary;

    &:hover {
      transform: scale(1.05);
      transition: all 0.2s;
    }
  }

  &_icon {
    font-size: 6rem;
    display: inline-block;
    background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
    -webkit-background-clip: text;
    color: transparent;
    
  }

  &_para {
    font-size: 1.4rem;
  }
}

.o-toursCard {
  &_box {
    perspective: 150rem;
    position: relative;
  }
  &_face{
    transition: all .8s ease;
    position: absolute;
    /*position absolute remove an element from the page flow, therfore the
    container element dimensions will collapse. This is a similar behaviour as
    with the use of float. Unfortunatly there is no clearfix for this one and
    the only way to solve this is to assign hard coded dimensions to both the
    element positionend as absolute and the container*/
    backface-visibility: hidden;
    /*essential property to hide the backface of the element and allow the 
    other element front face to be visible*/
    border-radius: $borderRadius-px-default;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem $color-shadow-primary;
    
    &-front{
      /*empty rule*/
    } 
    
    &-back{
      transform: rotateY(-180deg);
      /*the parameter given to a transform function indicated the final
      value assigned to the element !it's not a delta value!*/
      text-align: center;
      padding: 11rem 0;
    }   
  }
  
  
  &_box:hover  &_face-front{
    transform: rotateY(180deg);
    transform: translateZ(2);
  }
  
  &_box:hover  &_face-back{
    transform: rotateY(0deg);
  }
   
  &_img{
    background-size: cover;
    height: 22rem;
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
  }
  
  &_heading{
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: $color-white;
    position: absolute;
    top: 12rem;
    right: 2rem;
    
    &-span{
      padding: 1rem 1.5rem;  
      box-decoration-break: clone;   
    }
  }
  
  &_details{
    
    ul{
      list-style: none;
      width: 80%;
      margin: 0 auto;
      margin-top: 5rem;
      
      li{
        text-align: center;
        font-size: 1.5rem;
        
        &:not(:last-child){
          padding-bottom: 1rem;
          border-bottom: 1px solid  $color-gray-light-2;
        }
        &:not(:first-child){
          padding-top: 1rem;
        }
      }
    }
  }
  &_priceContainer{
    display: inline-block;
  }
  &_priceBox{
    color: $color-white;
    margin-bottom: 8rem;
  }
  &_priceText{
    font-size: 1.4rem;
    text-transform: uppercase;
  }
  &_priceValue{
    font-size: 6rem;
    font-weight: 100;
  }
}

/*------------------------------------*\
  #STORY-SECTION
\*------------------------------------*/


.o-story{
  &_box{
    width: 75%;
    margin: 0 auto;
    background-color: rgba($color-grey-light-1, .7);
    box-shadow: 0 3rem 6rem rgba($color-black-almost, .1);
    border-radius: $borderRadius-px-default;
    padding: 4rem 6rem;
    transform: skewX(-5deg);
    
    & > *{
      transform: skewX(5deg);
    }
    
    &::after{
      content:"";
      clear: both;
      display: table;
      visibility: hidden;
    }
    
    &:hover .o-story_caption{
      opacity: 1;
      transform: translateX(-50%) translateY(-50%);
      transition: .8s;
    }
    
    &:hover .o-story_img{
      transform: translateX(-3.5rem) scale(1);
      filter: blur(3px) brightness(80%);
      transition: .8s;
    }
  }
  &_shape{
    width: 15rem;
    height: 15rem;
    float: left;
    shape-outside: circle(50% at 50% 50%);
    /*shape outside together with float allows the text or other objects to precisly follow
    the shape of the element instead of the box around it*/
    clip-path: circle(50% at 50% 50%);
    margin-right: 2rem;
    position: relative;
  }
  
  
  &_img{
    height: 100%;
  }
  
  &_text{
    font-size: $default-font-size;
    //min-height: 15rem;
  }
  
  &_caption{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(20%);
    backface-visibility: hidden;
    text-transform: uppercase;
    font-size: $default-font-size;
    text-align: center;
    color: $color-white;
    opacity: 0;
  }
}
/*------- end of: story section ------*/
/*/
/*/
/*------------------------------------*\
  #BOOKING-FORM
\*------------------------------------*/

.o-bookingForm{
  &_box{
    background-size: cover;
    border-radius: $borderRadius-px-default;
    box-shadow: 0 1.5rem 4rem rgba($color-black-almost, .15);
    padding: $margin-rem-medium;   
  }
  &_group{
    width: 40%;
  }
  
  &_group:not(:last-child){
    margin-bottom: 2rem;
  }
  &_input{
    font-size: 1.5rem;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    color:inherit;
    background-color: rgba($color-white, .8);
    border: none;
    border-bottom: 3px solid transparent;
    width: 95%;
    display: block;
    &:not(:first-child){
      margin-top: $margin-rem-small;
    }
    &:focus{
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black-almost, .5);
      border-bottom: 3px solid $color-primary;
    }
    &:focus:invalid{
      /*this selector allows to appy stiles to a input field that is negatively
      assessed by the html validator defined with the html input type definition*/
      border-bottom: 3px solid $color-secondary-dark;
    }
    &:invalid{
      /*this selector allows to appy stiles to a input field that is negatively
      assessed by the html validator defined with the html input type definition*/
      box-shadow: none;
      border-bottom: 3px solid $color-secondary-dark;
    }
    &:valid{
      border-bottom: 3px solid $color-primary;
    }
  }
  
  &_label{
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
  }
  
  &_input:placeholder-shown + &_label{
    /*This selector allows to select the label only when the placeholder in the
    input is hidden by the text input*/
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
    transition: .3s;
  }
}

/*------ end of: booking form -----*/
/*/
/*/
/*------------------------------------*\
 *--------- END OF: OBJECTS ----------*
\*------------------------------------*/